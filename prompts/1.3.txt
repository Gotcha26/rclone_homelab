Dans le script ci-dessus, je veux que dans la section "variables" on puisse trouver les options pour rclone. 1 argument par ligne.

Je veux voir sous :
echo "=== Synchronisation : $src → $dst ==="
L'information suivante :
"Tâche lancée le 2025-08-09 à 00:10:33"

Affiche moi le script ainsi modifié. Ne modifie pas autre chose que ce que je te demande de faire.





#!/usr/bin/env bash
###############################################################################
# Script : rclone_sync_job.sh
# Version : 1.3 - 2025-08-08
# Auteur  : Julien & ChatGPT
#
# Description :
#   Lit la liste des jobs dans rclone_jobs.txt et exécute rclone pour chacun.
#   Format du fichier rclone_jobs.txt :
#       source|destination
#
#   Les lignes commençant par # ou vides sont ignorées.
###############################################################################

set -euo pipefail

###############################################################################
# Variables
###############################################################################
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
JOBS_FILE="$SCRIPT_DIR/rclone_jobs.txt"   # Modifier ici si besoin

# Options rclone (1 par ligne)
RCLONE_OPTS=(
    --log-level INFO
    # --dry-run
    # --progress
)

###############################################################################
# Vérifications initiales
###############################################################################
if [[ ! -f "$JOBS_FILE" ]]; then
    echo "❌ Fichier jobs introuvable : $JOBS_FILE" >&2
    exit 1
fi
if [[ ! -r "$JOBS_FILE" ]]; then
    echo "❌ Fichier jobs non lisible : $JOBS_FILE" >&2
    exit 1
fi

# Charger la liste des remotes configurés dans rclone
mapfile -t RCLONE_REMOTES < <(rclone listremotes 2>/dev/null | sed 's/:$//')

###############################################################################
# Pré-vérification de tous les jobs
###############################################################################
while IFS= read -r line; do
    [[ -z "$line" || "$line" =~ ^# ]] && continue
    IFS='|' read -r src dst <<< "$line"

    src="${src#"${src%%[![:space:]]*}"}"
    src="${src%"${src##*[![:space:]]}"}"
    dst="${dst#"${dst%%[![:space:]]*}"}"
    dst="${dst%"${dst##*[![:space:]]}"}"

    if [[ -z "$src" || -z "$dst" ]]; then
        echo "❌ Ligne invalide dans $JOBS_FILE : $line" >&2
        exit 1
    fi

    if [[ ! -d "$src" ]]; then
        echo "❌ Dossier source introuvable ou inaccessible : $src" >&2
        exit 1
    fi

    if [[ "$dst" == *":"* ]]; then
        remote_name="${dst%%:*}"
        if [[ ! " ${RCLONE_REMOTES[*]} " =~ " ${remote_name} " ]]; then
            echo "❌ Remote inconnu dans rclone : $remote_name" >&2
            exit 1
        fi
    fi
done < "$JOBS_FILE"

###############################################################################
# Exécution des jobs
###############################################################################
while IFS= read -r line; do
    [[ -z "$line" || "$line" =~ ^# ]] && continue

    IFS='|' read -r src dst <<< "$line"
    src="${src#"${src%%[![:space:]]*}"}"
    src="${src%"${src##*[![:space:]]}"}"
    dst="${dst#"${dst%%[![:space:]]*}"}"
    dst="${dst%"${dst##*[![:space:]]}"}"

    echo "=== Synchronisation : $src → $dst ==="
    echo "Tâche lancée le $(date '+%Y-%m-%d à %H:%M:%S')"

    rclone sync "$src" "$dst" "${RCLONE_OPTS[@]}"
    echo
done < "$JOBS_FILE"
